<template>
  <!-- template里只能有一个根节点 -->
  <div class="demo-page">
    <div class="header">
      <text class="title"><span>designWidth fixed(默认750)</span><a href="/Demo">点击查看示例二</a></text>
      <text>大屏幕 电视 (≥1200dp) 显示四列</text>
      <text>中屏幕（平板，大于等于 600dp 小于1200dp）显示三列</text>
      <text>小屏幕（手机 大于等于300dp 小于600dp）显示两列</text>
      <text>超小屏幕（手表 小于 300dp）显示一列</text>
      <text>当前屏幕：windowWidth：{{deviceInfo.windowWidth}} windowHeight：{{deviceInfo.windowHeight}} </text>
      <text>当前屏幕：screenWidth：{{deviceInfo.screenWidth}} screenWidth：{{deviceInfo.screenHeight}} screenDensity：{{deviceInfo.screenDensity}}</text>
    </div>
    <div class="content">
      <div class="item-container">
        <div for="listData" class="item">
          <div class="top">
            <text class="name">{{$item.name}}</text>
          </div>
          <div class="bottom">
            <text>{{$item.text}}</text>
          </div>
        </div>
      </div>
    </div>
  </div>
</template>

<script>
  import device from '@system.device'

export default {
  private: {
    listData: [
      {
        name: '第一个标题',
        text: 'A 展现文本内容'
      },      {
        name: '第二个标题',
        text: 'B 展现文本内容'
      },      {
        name: '第三个标题',
        text: 'C 展现文本内容'
      },      {
        name: '第四个标题',
        text: 'D 展现文本内容'
      },      {
        name: '第五个标题',
        text: 'E 展现文本内容'
      },      {
        name: '第六个标题',
        text: 'F 展现文本内容'
      },      {
        name: '第七个标题',
        text: 'G 展现文本内容'
      }
    ],
    deviceInfo: {
      windowWidth: 0,
      windowHeight: 0,
      screenWidth: 0,
      screenHeight: 0,
      screenDensity: 0
    }
  },
  onInit() {
    const deviceInfo = this.deviceInfo
    device.getInfo({
      success(ret){
        console.log(ret)
        deviceInfo.windowWidth = ret.windowWidth
        deviceInfo.windowHeight = ret.windowHeight
        deviceInfo.screenWidth = ret.screenWidth
        deviceInfo.screenHeight = ret.screenHeight
        deviceInfo.screenDensity = ret.screenDensity
      }
    })
  }
}
</script>

<style>
  .demo-page {
    flex-direction: column;
  }

  .demo-page a{
    color: blue;
    font-size: 30px;
  }

  .demo-page text{
    padding: 4px;
    font-size: 30px;
  }

  .header {
    height: 420px;
    flex-direction: column;
  }
  .header .title {
    font-size: 40px;
    height: 120px;
  }
  .content .item-container{
    flex-direction: row;
    flex-wrap: wrap;
  }

  .content .item-container .item{
    flex-direction: column;
    background-color:#DDDDDD;
    height: 200px;
    border-width: 1px;
    border-color: #FFFFFF;
  }

  /*
   * TODO: max-device-width min-device-width 改为 max-width min-width
   * TODO: 添加单位dp
   * 如：max-device-width:30 应改为 max-width:300dp
   */
  @media screen and (max-device-width:300){
    .content .item-container .item{
      width: 750px;
    }
  }

  @media screen and (min-device-width:300){
    .demo-page text{
      font-size: 28px;
    }
    .header {
      height: 400px;
      flex-direction: column;
    }
    .header .title {
      font-size: 34px;
      height: 80px;
    }
    .content .item-container .item{
      width: 375px;
    }
  }
  @media screen and (min-device-width:600) {
    .demo-page text{
      font-size: 20px;
    }
    .header {
      height: 200px;
      flex-direction: column;
    }
    .header .title {
      font-size: 30px;
      height: 60px;
    }

    .content .item-container .item{
      width: 250px;
      height: 150px;
    }
  }
  @media screen and (min-device-width:800) {
    .content .item-container .item{
      width: 187.5px;
      height: 150px;
    }
  }
</style>
